
  <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY&libraries=places"></script>

  <!-- Order Detail Modal -->
  <div id="detailsModal" class="absolute inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-lg p-6 max-w-lg w-full">
      <h2 class="text-2xl font-bold mb-4">Order Details</h2>
      <div id="modalContent"></div>
      <div class="mt-4 flex justify-end">
        <button onclick="closeModal()" class="px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600">
          Close
        </button>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      // Function to view order details
      function viewDetails(order) {
        const container = document.getElementById('modalContent');

        const orderInfoHTML = `
          <div class="bg-white shadow-md rounded-lg p-6 mb-6">
            <p class="text-gray-700"><strong>User ID:</strong> ${order.userId}</p>
            <p class="text-gray-700"><strong>Location:</strong> ${order.location}</p>
            <p class="text-gray-700"><strong>Special Instructions:</strong> ${order.specialOrder}</p>
            <div class="flex items-center mb-4">
              <label class="text-gray-700 font-semibold mr-2" for="status">Status:</label>
              <select id="status" class="bg-gray-200 rounded px-2 py-1">
                <option value="progress" ${order.status === 'progress' ? 'selected' : ''}>In Progress</option>
                <option value="completed" ${order.status === 'completed' ? 'selected' : ''}>Completed</option>
                <option value="cancelled" ${order.status === 'cancelled' ? 'selected' : ''}>Cancelled</option>
              </select>
            </div>
            <div class="flex items-center mb-4">
              <label class="text-gray-700 font-semibold mr-2" for="price">Total Price:</label>
              <input type="number" id="price" class="bg-gray-200 rounded px-2 py-1" value="${order.totalPrice}" step="0.01">
            </div>
          </div>

          <!-- Food Image -->
          <div class="mb-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-2">Food Image</h2>
            <img src="${order.Food.foodUrl}" alt="Food Image" class="w-full h-auto rounded shadow-md">
          </div>

          <!-- Map (using Google Maps) -->
          <div class="mb-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-2">Delivery Location</h2>
            <div id="map" class="w-full h-64 rounded shadow-md"></div>
          </div>

          <!-- Save Changes Button -->
          <div class="text-center">
            <button id="saveChanges" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">Save Changes</button>
          </div>
        `;

        // Insert the generated HTML into the container
        container.innerHTML = orderInfoHTML;

        // Initialize the map
        initMap(order.latitude, order.longitude);

        // Show modal
        detailsModal.classList.remove('hidden');

        // Attach save changes event
        document.getElementById('saveChanges').addEventListener('click', () => {
          const updatedStatus = document.getElementById('status').value;
          const updatedPrice = document.getElementById('price').value;

          // Simulate sending updated data to the backend
          updateOrderInModel(order.orderId, updatedStatus, updatedPrice);
        });
      }

      // Google Map Initialization
      function initMap(lat, lng) {
        const location = { lat, lng };
        const map = new google.maps.Map(document.getElementById("map"), {
          zoom: 14,
          center: location,
        });
        const marker = new google.maps.Marker({
          position: location,
          map: map,
          title: "Delivery Location",
        });
      }

      // Close modal function
      function closeModal() {
        detailsModal.classList.add('hidden');
      }

      // Simulate updating the order in the backend model
      function updateOrderInModel(orderId, newStatus, newPrice) {
        fetch(`/api/order/${orderId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            status: newStatus,
            totalPrice: newPrice,
          }),
        })
          .then(response => response.json())
          .then(data => {
            if (data.message === 'Order updated successfully') {
              alert('Order details updated successfully!');
            } else {
              alert('Failed to update order!');
            }
          })
          .catch(error => {
            console.error('Error updating order:', error);
            alert('Failed to update order!');
          });
      }

    });
  </script>

</body>

</html>
