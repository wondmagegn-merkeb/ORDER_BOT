<div class="container mx-auto px-4 py-6">
  <h1 class="text-3xl font-bold mb-4">Admin Audit Logs</h1>

  <!-- Search Form -->
  <div class="mb-4">
    <input
      type="text"
      id="searchInput"
      placeholder="Search by Action or Admin"
      class="w-full p-2 border rounded-md"
    />
  </div>

  <!-- Audit Log Table -->
  <table class="min-w-full bg-white border border-gray-300 rounded-md shadow-md">
    <thead>
      <tr>
        <th class="p-3 border-b text-left">ID</th>
        <th class="p-3 border-b text-left">Action</th>
        <th class="p-3 border-b text-left">Performed By</th>
        <th class="p-3 border-b text-left">Date</th>
        <th class="p-3 border-b text-left">Details</th> <!-- View Details column -->
      </tr>
    </thead>
    <tbody id="auditTableBody">
      <% auditLogs.forEach(log => { %>
        <tr>
          <td class="p-3 border-b"><%= log.id %></td>
          <td class="p-3 border-b"><%= log.action %></td>
          <td class="p-3 border-b"><%= log.performedBy %></td>
          <td class="p-3 border-b"><%= log.createdAt %></td>
          <!-- View Details button -->
          <td class="p-3 border-b">
            <button 
              class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600" 
              onclick="viewDetails(<%= JSON.stringify(log) %>)">
              View Details
            </button>
          </td>
        </tr>
      <% }); %>
    </tbody>
  </table>

  <!-- Pagination -->
  <div class="mt-6 flex justify-end items-center space-x-2" id="paginationContainer">
    <!-- Pagination buttons will be added by JS -->
  </div>
</div>

<!-- Modal for Details -->
<div id="detailsModal" class="fixed inset-0 bg-gray-800 bg-opacity-50 flex items-center justify-center hidden">
  <div class="bg-white rounded-lg p-6 max-w-lg w-full">
    <h2 class="text-2xl font-bold mb-4">Audit Log Details</h2>
    <div id="modalContent"></div>
    <div class="mt-4 flex justify-end">
      <button onclick="closeModal()" class="px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600">
        Close
      </button>
    </div>
  </div>
</div>

<script>
  const searchInput = document.getElementById('searchInput');
  const auditTableBody = document.getElementById('auditTableBody');
  const rows = Array.from(auditTableBody.getElementsByTagName('tr'));
  const paginationContainer = document.getElementById('paginationContainer');
  const detailsModal = document.getElementById('detailsModal');
  const modalContent = document.getElementById('modalContent');

  const rowsPerPage = 5;
  let currentPage = 1;

  // Search functionality
  searchInput.addEventListener('input', function () {
    const searchQuery = this.value.toLowerCase();
    rows.forEach(row => {
      const action = row.cells[1].textContent.toLowerCase();
      const performedBy = row.cells[2].textContent.toLowerCase();
      row.style.display = (action.includes(searchQuery) || performedBy.includes(searchQuery)) ? '' : 'none';
    });
  });

  // Pagination rendering
  function displayPage(page) {
    const start = (page - 1) * rowsPerPage;
    const end = start + rowsPerPage;

    rows.forEach((row, index) => {
      row.style.display = (index >= start && index < end) ? '' : 'none';
    });

    renderPagination();
  }

  function renderPagination() {
    paginationContainer.innerHTML = '';

    const totalPages = Math.ceil(rows.length / rowsPerPage);

    for (let i = 1; i <= totalPages; i++) {
      const btn = document.createElement('button');
      btn.textContent = i;
      btn.className = `px-3 py-1 rounded-md border text-sm ${
        i === currentPage 
          ? 'bg-blue-500 text-white border-blue-500' 
          : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-100'
      }`;

      btn.addEventListener('click', () => {
        currentPage = i;
        displayPage(currentPage);
      });

      paginationContainer.appendChild(btn);
    }
  }

  // Function to display more details in a modal when the View Details button is clicked
  function viewDetails(log) {
    modalContent.innerHTML = `
      <p><strong>Action:</strong> ${log.action}</p>
      <p><strong>Performed By:</strong> ${log.performedBy}</p>
      <p><strong>Old Data:</strong> ${JSON.stringify(log.oldData)}</p>
      <p><strong>New Data:</strong> ${JSON.stringify(log.newData)}</p>
      <p><strong>Date:</strong> ${log.createdAt}</p>
    `;

    detailsModal.classList.remove('hidden');
  }

  // Function to close the modal
  function closeModal() {
    detailsModal.classList.add('hidden');
  }

  // Init
  displayPage(currentPage);
</script>
