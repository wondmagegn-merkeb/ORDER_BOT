

  <div class="max-w-7xl mx-auto px-4 py-6">
    <h1 class="text-3xl font-bold text-center mb-8 text-gray-800">Food Management</h1>

    <!-- Search and Add -->
    <div class="flex justify-between items-center mb-6">
      <div class="relative w-full max-w-md">
        <input id="searchInput" type="text" placeholder="Search foods..." class="w-full p-2 pl-10 border border-gray-300 rounded">
        <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
      </div>

      <a href="/food/add" class="ml-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition inline-flex items-center gap-2">
        <i class="fas fa-plus"></i> Add
      </a>
    </div>

    <!-- Food Cards -->
    <div id="foodContainer" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
      <% foods.forEach(food => { %>
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
          <img src="<%= food.imageUrl || 'https://via.placeholder.com/400x250?text=No+Image' %>" alt="<%= food.name %>" class="w-full h-48 object-cover">
          
          <div class="p-4">
            <h2 class="text-xl font-semibold text-gray-800 mb-1"><%= food.name %></h2>
            <p class="text-sm text-gray-500 mb-1"><i class="fas fa-tag mr-1 text-blue-600"></i> <%= food.categoryName || 'Uncategorized' %></p>
            <p class="text-sm text-gray-600 mb-2"><%= food.description || 'No description available.' %></p>

            <div class="flex justify-between items-center mb-2">
              <span class="text-lg font-bold text-blue-600">
                <i class="fas fa-dollar-sign mr-1"></i><%= food.price.toFixed(2) %>
              </span>
              <span class="px-2 py-1 text-xs rounded-full font-medium 
                <%= food.isAvailable ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700' %>">
                <i class="fas <%= food.isAvailable ? 'fa-check-circle' : 'fa-times-circle' %> mr-1"></i>
                <%= food.isAvailable ? 'Available' : 'Unavailable' %>
              </span>
            </div>

            <div class="flex justify-between mt-3">
              <a href="/food/edit/<%= food.id %>" class="text-yellow-500 hover:underline font-medium inline-flex items-center gap-1">
                <i class="fas fa-edit"></i> Edit
              </a>
              <form action="/api/food/delete/<%= food.id %>" method="POST" onsubmit="return confirm('Delete this food item?');">
                <button type="submit" class="text-red-500 hover:underline font-medium inline-flex items-center gap-1">
                  <i class="fas fa-trash"></i> Delete
                </button>
              </form>
            </div>
          </div>
        </div>
      <% }) %>
    </div>

    <!-- Pagination -->
    <div id="pagination" class="mt-8 flex justify-center gap-2">
      <!-- Buttons will be generated by JS -->
    </div>
  </div>

  <script>
    const foods = <%- JSON.stringify(foods) %>; // Injected from server
    const foodContainer = document.getElementById('foodContainer');
    const searchInput = document.getElementById('searchInput');
    const pagination = document.getElementById('pagination');

    const itemsPerPage = 6;
    let currentPage = 1;

    function renderFoods() {
      const keyword = searchInput.value.toLowerCase();
      const filtered = foods.filter(f =>
        f.name.toLowerCase().includes(keyword) ||
        f.categoryName?.toLowerCase().includes(keyword)
      );

      const start = (currentPage - 1) * itemsPerPage;
      const paginated = filtered.slice(start, start + itemsPerPage);

      foodContainer.innerHTML = paginated.map(food => `
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
          <img src="${food.imageUrl || 'https://via.placeholder.com/400x250?text=No+Image'}" alt="${food.name}" class="w-full h-48 object-cover">
          <div class="p-4">
            <h2 class="text-xl font-semibold text-gray-800 mb-1">${food.name}</h2>
            <p class="text-sm text-gray-500 mb-1"><i class="fas fa-tag mr-1 text-blue-600"></i> ${food.categoryName || 'Uncategorized'}</p>
            <p class="text-sm text-gray-600 mb-2">${food.description || 'No description available.'}</p>
            <div class="flex justify-between items-center mb-2">
              <span class="text-lg font-bold text-blue-600"><i class="fas fa-dollar-sign mr-1"></i>${food.price.toFixed(2)}</span>
              <span class="px-2 py-1 text-xs rounded-full font-medium ${food.isAvailable ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}">
                <i class="fas ${food.isAvailable ? 'fa-check-circle' : 'fa-times-circle'} mr-1"></i>
                ${food.isAvailable ? 'Available' : 'Unavailable'}
              </span>
            </div>
            <div class="flex justify-between mt-3">
              <a href="/admin/food/edit/${food.id}" class="text-yellow-500 hover:underline font-medium inline-flex items-center gap-1">
                <i class="fas fa-edit"></i> Edit
              </a>
              <form action="/admin/food/delete/${food.id}" method="POST" onsubmit="return confirm('Delete this food item?');">
                <button type="submit" class="text-red-500 hover:underline font-medium inline-flex items-center gap-1">
                  <i class="fas fa-trash"></i> Delete
                </button>
              </form>
            </div>
          </div>
        </div>
      `).join('');

      renderPagination(filtered.length);
    }

    function renderPagination(totalItems) {
      const totalPages = Math.ceil(totalItems / itemsPerPage);
      pagination.innerHTML = '';

      for (let i = 1; i <= totalPages; i++) {
        const btn = document.createElement('button');
        btn.className = `px-3 py-1 border rounded ${i === currentPage ? 'bg-blue-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-200'}`;
        btn.innerText = i;
        btn.onclick = () => {
          currentPage = i;
          renderFoods();
        };
        pagination.appendChild(btn);
      }
    }

    searchInput.addEventListener('input', () => {
      currentPage = 1;
      renderFoods();
    });

    renderFoods();
  </script>
